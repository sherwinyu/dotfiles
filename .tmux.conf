######################
# File: ~/.tmux.conf
# Author: Sherwin Yu
######################

#
# use ` as the prefix
#
set-option -g prefix `
bind-key ` send-prefix

#
# Number windows starting from 1
#
set -g base-index 1

# Have status messages last longer
set-option -g display-time 2500


#
# Use escape or = to enter copy mode
#
bind-key = copy-mode


#
# Scrolling in copy mode (e/d, pageup/pagedown)
#
unbind -t vi-copy PPage
unbind -t vi-copy NPage

bind-key -t vi-copy PPage halfpage-up
bind-key -t vi-copy NPage halfpage-down

bind-key -t vi-copy e halfpage-up
bind-key -t vi-copy d halfpage-down

bind-key j command-prompt -p "join pane from:" "join-pane -h -l 80 -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -h -l 80 -t '%%'"

bind-key S join-pane -h -l 80 -t :1

bind-key c-1 join-pane -h -l 80 -s :1
bind-key c-2 join-pane -h -l 80 -s :2
bind-key c-3 join-pane -h -l 80 -s :3
bind-key c-4 join-pane -h -l 80 -s :4
bind-key c-5 join-pane -h -l 80 -s :5
bind-key c-6 join-pane -h -l 80 -s :6

bind-key f1 join-pane -h -l 80 -t :1
bind-key f2 join-pane -h -l 80 -t :2
bind-key f3 join-pane -h -l 80 -t :3
bind-key f4 join-pane -h -l 80 -t :4
bind-key f5 join-pane -h -l 80 -t :5
bind-key f6 join-pane -h -l 80 -t :6


# = = = =

#
# Use `r to reload
#
unbind R
bind R \
  source-file ~/.tmux.conf \;\
  display 'Reloaded tmux config.'


#
# Use `tab to jump to previous window
# (is the first line necessary?)
bind-key tab last-window



#
# Color scheme
#
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold

# center align window list
set -g status-justify centre

set -g pane-border-fg colour245
set -g pane-active-border-fg colour46
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# #S -- session name; #I -- host name; #W -- time and date
set -g status-left-bg white
set -g status-left ' #[fg=black]#S '
set -g status-right '#[fg=blue,bold]#h #[fg=white,nobold] %a %b %d @ %H:%M'
set -g window-status-format "#[fg=white,bg=colour234] #I #W  "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W  #[fg=colour39,bg=colour234,nobold]"

setw -g aggressive-resize on


#
#
# The following options have been modified from:
# https://github.com/tangledhelix/dotfiles/blob/master/tmux.conf
#
#

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Watch for activity in background windows
setw -g monitor-activity on


# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
bind-key -r J resize-pane -D 25
bind-key -r K resize-pane -U 25
bind-key -r H resize-pane -L 25
bind-key -r L resize-pane -R 25

# Pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi


# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

#
# Toggle mouse on
#
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'


#
# Toggle mouse off
#
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'




# pass through xterm keys
set -g xterm-keys on


#
# If a .tmux.conf.local object exists, source it.
source-file ~/.tmux.conf.local


#
# Automatically spawn new windows in current working directory
#  - For 1.9 - Make new windows start in the
#    same directory as the current window
#    https://coderwall.com/p/tjo3ig
if-shell "[[ `tmux -V` == *1.9* ]]" \
    'unbind c; bind c new-window -c "#{pane_current_path}"; unbind %; bind % split-window -h "#{pane_current_path}"; unbind "; bind " split-window -v "#{pane_current_path}"'


# Bind % and " to default into the current directory
unbind %
bind % split-window -v -c "#{pane_current_path}"

unbind '"'
bind '"' split-window -h -c "#{pane_current_path}"

# If it's not 1.9, use normal default-path approach
if-shell "[[ `tmux -V` != *1.9* ]]" \
    'set-option default-path "$PWD"'

#
# Vim style copy paste
#

# set-window-option mode-keys vi
# bind-key -t vi-copy 'y' copy-selection
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'V' rectangle-toggle
# bind-key -t vi-copy Y copy-end-of-line



# Vim-style copy/paste
# unbind [
# bind y copy-mode
# unbind p
# bind p paste-buffer
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
# bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
# bind -t vi-copy Escape cancel

bind -t vi-copy - start-of-line
bind -t vi-copy = end-of-line
# unbind-key -t vi-copy v
bind y  \
  send-keys ^ Space '$' Enter  \;\
