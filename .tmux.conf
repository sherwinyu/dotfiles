source-file ~/.tmux.conf.local
set-option -g prefix `
set -g base-index 1
bind-key = copy-mode
bind-key k copy-mode
bind-key tab select-pane -t :.+
bind-key ` send-prefix
bind-key r source-file ~/.tmux.conf
bind-key S source-file ~/dotfiles/tmux/standard

# unbind-key C-left
# unbind-key C-right

set -g status-bg blue
set -g status-fg white
set -g status-bg black
set -g status-fg white
set -g status-left ‘#[fg=green]#H’
setw -g aggressive-resize on
set-window-option -g window-status-current-bg red
# set -g mouse-select-pane on

set-option default-path "$PWD"
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# set-window-option -g mode-mouse on

# copied from https://github.com/tangledhelix/dotfiles/blob/master/tmux.conf

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Watch for activity in background windows
setw -g monitor-activity on

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

bind-key j previous-window

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Vim-style copy/paste
# unbind [
# bind y copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy H start-of-line
# bind -t vi-copy L end-of-line
# bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
# bind -t vi-copy Escape cancel

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1

# + and - "zoom" and "unzoom" a pane.
# + breaks a pane out to its own window
# - restores a broken-out pane to being a pane

unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

# reload tmux config
unbind r
bind r \
  source-file ~/.tmux.conf \;\
  display 'Reloaded tmux config.'

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# pass through xterm keys
set -g xterm-keys on

# color scheme (style based on vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour46
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g window-status-format "#[fg=white,bg=colour234] #I #W  "

set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W  #[fg=colour39,bg=colour234,nobold]"
set -g status-left '#[fg=green]#S '







